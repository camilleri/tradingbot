// <auto-generated />
using System;
using DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace bot.Migrations
{
    [DbContext(typeof(BotContext))]
    partial class BotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataModel.DailyOHLCV", b =>
                {
                    b.Property<string>("BaseCurrency")
                        .HasMaxLength(3);

                    b.Property<string>("QuoteCurrency")
                        .HasMaxLength(3);

                    b.Property<DateTime>("Time");

                    b.Property<decimal>("Close");

                    b.Property<decimal>("High");

                    b.Property<decimal>("Open");

                    b.Property<double>("VolumeFrom");

                    b.Property<double>("VolumeTo");

                    b.HasKey("BaseCurrency", "QuoteCurrency", "Time");

                    b.ToTable("DailyOHLCVs");
                });

            modelBuilder.Entity("DataModel.PercentageOfChangeAction", b =>
                {
                    b.Property<string>("BaseCurrency")
                        .HasMaxLength(3);

                    b.Property<string>("QuoteCurrency")
                        .HasMaxLength(3);

                    b.Property<DateTime>("Time");

                    b.Property<decimal>("Amount");

                    b.Property<int>("TradeAction");

                    b.HasKey("BaseCurrency", "QuoteCurrency", "Time");

                    b.ToTable("PercentageOfChangeActions");
                });

            modelBuilder.Entity("DataModel.PercentageOfChangeConfiguration", b =>
                {
                    b.Property<string>("BaseCurrency")
                        .HasMaxLength(3);

                    b.Property<string>("QuoteCurrency")
                        .HasMaxLength(3);

                    b.Property<DateTime>("Time");

                    b.Property<decimal>("AmountToTrade");

                    b.Property<int>("DaysForChange");

                    b.Property<double>("PercentageForChange");

                    b.HasKey("BaseCurrency", "QuoteCurrency", "Time");

                    b.ToTable("PercentageOfChangeConfigurations");
                });

            modelBuilder.Entity("DataModel.PercentageOfChangeTrend", b =>
                {
                    b.Property<string>("BaseCurrency")
                        .HasMaxLength(3);

                    b.Property<string>("QuoteCurrency")
                        .HasMaxLength(3);

                    b.Property<DateTime>("Time");

                    b.Property<int>("DaysTrendingDown");

                    b.Property<int>("DaysTrendingUp");

                    b.Property<int>("DaysWithNoTrend");

                    b.Property<int>("TradeAction");

                    b.HasKey("BaseCurrency", "QuoteCurrency", "Time");

                    b.ToTable("PercentageOfChangeTrends");
                });

            modelBuilder.Entity("DataModel.UnitsOfChangeAction", b =>
                {
                    b.Property<string>("BaseCurrency")
                        .HasMaxLength(3);

                    b.Property<string>("QuoteCurrency")
                        .HasMaxLength(3);

                    b.Property<DateTime>("Time");

                    b.Property<decimal>("Amount");

                    b.Property<int>("TradeAction");

                    b.HasKey("BaseCurrency", "QuoteCurrency", "Time");

                    b.ToTable("UnitsOfChangeActions");
                });

            modelBuilder.Entity("DataModel.UnitsOfChangeConfiguration", b =>
                {
                    b.Property<string>("BaseCurrency")
                        .HasMaxLength(3);

                    b.Property<string>("QuoteCurrency")
                        .HasMaxLength(3);

                    b.Property<DateTime>("Time");

                    b.Property<decimal>("AmountToTrade");

                    b.Property<int>("DaysForChange");

                    b.Property<decimal>("UnitsForChange");

                    b.HasKey("BaseCurrency", "QuoteCurrency", "Time");

                    b.ToTable("UnitsOfChangeConfigurations");
                });

            modelBuilder.Entity("DataModel.UnitsOfChangeTrend", b =>
                {
                    b.Property<string>("BaseCurrency")
                        .HasMaxLength(3);

                    b.Property<string>("QuoteCurrency")
                        .HasMaxLength(3);

                    b.Property<DateTime>("Time");

                    b.Property<int>("DaysTrendingDown");

                    b.Property<int>("DaysTrendingUp");

                    b.Property<int>("DaysWithNoTrend");

                    b.Property<int>("TradeAction");

                    b.HasKey("BaseCurrency", "QuoteCurrency", "Time");

                    b.ToTable("UnitsOfChangeTrends");
                });
#pragma warning restore 612, 618
        }
    }
}
